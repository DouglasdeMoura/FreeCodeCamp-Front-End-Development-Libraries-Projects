{"version":3,"file":"twenty-five-plus-five-clock.stories.f40b1154.js","sources":["../../../node_modules/rooks/dist/esm/utils/noop.js","../../../node_modules/rooks/dist/esm/hooks/useIntervalWhen.js","../../../src/pages/twenty-five-plus-five-clock/twenty-five-plus-five-clock.tsx"],"sourcesContent":["const noop = () => { };\n\nexport { noop };\n","import { useRef, useEffect } from 'react';\nimport { noop } from '../utils/noop.js';\n\n/**\r\n * A setInterval hook that calls a callback after a interval duration\r\n * when a condition is true\r\n *\r\n * @param callback The callback to be invoked after interval\r\n * @param intervalDurationMs Amount of time in ms after which to invoke\r\n * @param when The condition which when true, sets the interval\r\n * @param startImmediate If the callback should be invoked immediately\r\n * @see https://rooks.vercel.app/docs/useIntervalWhen\r\n */\r\nfunction useIntervalWhen(callback, intervalDurationMs = 0, when = true, startImmediate = false) {\r\n    const savedRefCallback = useRef();\r\n    useEffect(() => {\r\n        savedRefCallback.current = callback;\r\n    });\r\n    useEffect(() => {\r\n        if (when) {\r\n            function internalCallback() {\r\n                var _a;\r\n                (_a = savedRefCallback.current) === null || _a === void 0 ? void 0 : _a.call(savedRefCallback);\r\n            }\r\n            if (startImmediate) {\r\n                internalCallback();\r\n            }\r\n            const interval = window.setInterval(internalCallback, intervalDurationMs);\r\n            return () => {\r\n                window.clearInterval(interval);\r\n            };\r\n        }\r\n        return noop;\r\n    }, [when, intervalDurationMs, startImmediate]);\r\n}\n\nexport { useIntervalWhen };\n","import { useRef, useState } from 'react'\n\nimport { Button } from '../../components/button'\n\nimport { useIntervalWhen } from 'rooks'\n\nconst BREAK_LENGTH = 5 // minutes\nconst SESSION_LENGTH = 25 // minutes\nconst TOP_LIMIT = 60 // minutes\nconst BOTTOM_LIMIT = 1 // minute\n\nconst toSeconds = (minutes: number) => minutes * 60\n\nconst toTimeString = (seconds: number) => {\n  const minutes = Math.floor(seconds / 60)\n  const remainingSeconds = seconds % 60\n  return `${minutes.toString().padStart(2, '0')}:${remainingSeconds\n    .toString()\n    .padStart(2, '0')}`\n}\n\ntype State = 'Session' | 'Break'\n\nexport const TwentyFivePlusFiveClock: React.FC = () => {\n  const audioRef = useRef<HTMLAudioElement>(null)\n\n  const [timeLeft, setTimeLeft] = useState(toSeconds(SESSION_LENGTH))\n  const [sessionTime, setSessionTime] = useState(SESSION_LENGTH)\n  const [breakTime, setBreakTime] = useState(BREAK_LENGTH)\n  const [state, setState] = useState<State>('Session')\n  const [when, setWhen] = useState(false)\n\n  useIntervalWhen(\n    () => {\n      setTimeLeft((currentTimeLeft) => {\n        if (currentTimeLeft === 0) {\n          if (audioRef.current) {\n            audioRef.current.currentTime = 0\n            audioRef.current.play()\n          }\n\n          return state === 'Session'\n            ? toSeconds(breakTime)\n            : toSeconds(sessionTime)\n        }\n\n        return currentTimeLeft - 1\n      })\n\n      if (timeLeft === 0) {\n        setState((currentState) =>\n          currentState === 'Session' ? 'Break' : 'Session',\n        )\n      }\n    },\n    1000,\n    when,\n  )\n\n  const increase =\n    (setState: React.Dispatch<React.SetStateAction<number>>, type: State) =>\n    () => {\n      setState((currentState) =>\n        currentState < TOP_LIMIT ? currentState + 1 : TOP_LIMIT,\n      )\n\n      if (type === state) {\n        setTimeLeft((currentState) => currentState + toSeconds(1))\n      }\n    }\n\n  const decrease =\n    (setState: React.Dispatch<React.SetStateAction<number>>, type: State) =>\n    () => {\n      setState((currentState) =>\n        currentState > BOTTOM_LIMIT ? currentState - 1 : BOTTOM_LIMIT,\n      )\n\n      if (type === state) {\n        setTimeLeft((currentState) =>\n          Math.floor(currentState / 60) > 1\n            ? currentState - toSeconds(1)\n            : currentState,\n        )\n      }\n    }\n\n  const reset = () => {\n    setTimeLeft(toSeconds(SESSION_LENGTH))\n    setSessionTime(SESSION_LENGTH)\n    setBreakTime(BREAK_LENGTH)\n    setState('Session')\n    setWhen(false)\n\n    if (audioRef.current) {\n      audioRef.current.pause()\n      audioRef.current.currentTime = 0\n    }\n  }\n\n  return (\n    <div className=\"rounded bg-slate-300 p-4\">\n      <div className=\"mb-4\">\n        <p id=\"timer-label\" className=\"text-sm text-slate-600\">\n          {state}\n        </p>\n        <p\n          id=\"time-left\"\n          data-testid=\"time-left\"\n          className=\"text-4xl font-bold text-slate-900\"\n        >\n          {toTimeString(timeLeft)}\n        </p>\n      </div>\n      <div className=\"mb-4 flex justify-between gap-4 border-b  border-b-slate-400 pb-4\">\n        <Button\n          id=\"start_stop\"\n          data-testid=\"play-pause\"\n          onClick={() => setWhen((currentState) => !currentState)}\n          variant=\"primary\"\n        >\n          Play/Pause\n        </Button>\n\n        <Button id=\"reset\" onClick={reset} variant=\"secondary\">\n          Reset\n        </Button>\n      </div>\n\n      <TimerLengthControl\n        length={breakTime}\n        title=\"Break Length\"\n        id=\"break\"\n        onDecreaseClick={decrease(setBreakTime, 'Break')}\n        onIncreaseClick={increase(setBreakTime, 'Break')}\n      />\n\n      <TimerLengthControl\n        length={sessionTime}\n        title=\"Session Length\"\n        id=\"session\"\n        onDecreaseClick={decrease(setSessionTime, 'Session')}\n        onIncreaseClick={increase(setSessionTime, 'Session')}\n      />\n\n      {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n      <audio\n        id=\"beep\"\n        preload=\"auto\"\n        ref={audioRef}\n        src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n      />\n    </div>\n  )\n}\n\ntype TimerLengthControlProps = {\n  onIncreaseClick: () => void\n  onDecreaseClick: () => void\n  title: string\n  id: string\n  length: number\n}\n\nconst TimerLengthControl: React.FC<TimerLengthControlProps> = ({\n  length,\n  title,\n  id,\n  onDecreaseClick,\n  onIncreaseClick,\n}) => (\n  <div className=\"mb-4 flex items-center justify-between gap-4 border-b border-b-slate-400 pb-4\">\n    <div>\n      <h2 id={`${id}-label`} className=\"text-sm text-slate-600\">\n        {title}\n      </h2>\n      <p>\n        <span\n          id={`${id}-length`}\n          data-testid={`${id}-length`}\n          className=\"font-bold\"\n        >\n          {length}\n        </span>\n        <span className=\"text-sm font-normal text-slate-600\">minutes</span>\n      </p>\n    </div>\n    <div className=\"flex justify-between gap-4\">\n      <div>\n        <Button\n          id={`${id}-decrement`}\n          data-testid={`${id}-decrement`}\n          onClick={onDecreaseClick}\n          variant=\"secondary\"\n        >\n          Decrease\n        </Button>\n      </div>\n      <div>\n        <Button\n          id={`${id}-increment`}\n          data-testid={`${id}-increment`}\n          onClick={onIncreaseClick}\n          variant=\"secondary\"\n        >\n          Increase\n        </Button>\n      </div>\n    </div>\n  </div>\n)\n"],"names":["noop","useIntervalWhen","callback","intervalDurationMs","when","startImmediate","savedRefCallback","useRef","useEffect","internalCallback","_a","interval","BREAK_LENGTH","SESSION_LENGTH","TOP_LIMIT","BOTTOM_LIMIT","toSeconds","minutes","toTimeString","seconds","remainingSeconds","TwentyFivePlusFiveClock","audioRef","timeLeft","setTimeLeft","useState","sessionTime","setSessionTime","breakTime","setBreakTime","state","setState","setWhen","currentTimeLeft","increase","setState2","type","decrease","reset","_jsxs","_jsx","Button","currentState","TimerLengthControl","length","title","id","onDecreaseClick","onIncreaseClick"],"mappings":"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"}